# Generated by Django 3.2.8 on 2021-11-15 09:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import recruitment.lib.file_path


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('from_tnp', models.BooleanField(default=False)),
                ('mobile_number', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('company', models.CharField(max_length=128)),
                ('description', models.TextField(verbose_name='Job description')),
                ('description_link', models.URLField()),
                ('ctc', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Cost to Company')),
                ('location', models.CharField(max_length=128, verbose_name='Job location')),
                ('minimum_qualification', models.CharField(choices=[('B.Tech', 'Bachelor of Technology'), ('M.Tech', 'Master of Technology')], max_length=10)),
                ('year_of_graduation', models.CharField(max_length=4)),
                ('mandatory_skills', models.TextField()),
                ('desirable_skills', models.TextField()),
                ('ug_cutoff', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Undergraduate CGPA cutoff')),
                ('masters_cutoff', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Masters CGPA cutoff')),
                ('gap_in_education_allowed', models.BooleanField()),
                ('backlogs_allowed', models.BooleanField()),
                ('max_num_of_backlogs_allowed', models.SmallIntegerField(default=None, null=True, verbose_name='Maximum number of backlogs allowed')),
                ('branches_allowed', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('CSE', 'Computer Science and Engineering'), ('ECE', 'Electronics and Communication Engineering'), ('EEE', 'Electrical and Electronics Engineering'), ('MECH', 'Mechanical Engineering'), ('CIVIL', 'Civil Engineering'), ('CHEM', 'Chemical Engineering'), ('BIOT', 'Biotechnology'), ('MME', 'Metallurgical and Materials Engineering')], max_length=10), size=None)),
                ('deadline', models.DateTimeField()),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('hr_name', models.CharField(max_length=128)),
                ('hr_email', models.EmailField(max_length=254)),
                ('hr_phone', models.CharField(max_length=15)),
                ('num_of_students_applied', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('NS', 'Not started'), ('IP', 'In progress'), ('CO', 'Completed'), ('CL', 'Closed')], max_length=2, verbose_name='Status')),
                ('applied_by', models.ManyToManyField(related_name='applied_jobs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name of the site. Like GitHub, LinkedIn etc.')),
                ('link', models.URLField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Project title')),
                ('is_team_project', models.BooleanField()),
                ('description', models.TextField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobRound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.SmallIntegerField(verbose_name='Round number')),
                ('name', models.CharField(max_length=64)),
                ('reporting_time', models.DateTimeField(blank=True, null=True)),
                ('venue', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('is_last_round', models.BooleanField(blank=True, default=False, null=True)),
                ('contact_num', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('round_link', models.URLField(blank=True, null=True)),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_rounds', to='recruitment.job')),
                ('selected', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_alerts', to='recruitment.job')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_alerts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=128)),
                ('company', models.CharField(max_length=128)),
                ('duration', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='internships', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.CharField(max_length=100)),
                ('programme', models.CharField(max_length=100)),
                ('field_of_study', models.CharField(max_length=100, null=True)),
                ('year_of_passing', models.CharField(max_length=4)),
                ('year_of_enrollment', models.CharField(max_length=4)),
                ('level', models.CharField(choices=[('10th', '10th'), ('inter', 'Intermediate or 11th, 12th'), ('UG', 'Undergraduate'), ('PG', 'Postgraduate')], max_length=10)),
                ('score_type', models.CharField(choices=[('CGPA', 'CGPA'), ('PERCENTAGE', 'Percentage')], max_length=10)),
                ('score', models.FloatField()),
                ('passing_class', models.CharField(blank=True, choices=[('Distinction', 'Distinction'), ('First', 'First Class'), ('Second', 'Second Class'), ('Third', 'Third Class')], max_length=11, null=True)),
                ('certificate', models.FileField(blank=True, null=True, upload_to=recruitment.lib.file_path.certificate_path)),
                ('marksheet', models.FileField(blank=True, null=True, upload_to=recruitment.lib.file_path.marksheet_path)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Certification name')),
                ('issuing_authority', models.CharField(max_length=128)),
                ('certificate', models.FileField(blank=True, null=True, upload_to=recruitment.lib.file_path.certifications_path)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BTechExtras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minor_degree', models.CharField(blank=True, max_length=128, null=True)),
                ('minor_gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('honors_degree', models.CharField(blank=True, max_length=128, null=True)),
                ('honors_gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('btech', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='btech_extras', to='recruitment.education')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_1', models.CharField(max_length=100)),
                ('line_2', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=6)),
                ('country', models.CharField(max_length=100)),
                ('address_type', models.CharField(choices=[('P', 'Permanent'), ('H', 'Hostel')], max_length=1, verbose_name='Address type')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='recruitment.user')),
                ('roll_number', models.CharField(max_length=10, unique=True)),
                ('registration_number', models.CharField(max_length=10, unique=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('date_of_birth', models.DateField()),
                ('programme', models.CharField(choices=[('B.Tech', 'Bachelor of Technology'), ('M.Tech', 'Master of Technology')], max_length=10)),
                ('field_of_study', models.CharField(max_length=10)),
                ('backlogs_status', models.CharField(default='NB', max_length=3)),
                ('backlogs_cleared', models.SmallIntegerField(blank=True, null=True)),
                ('outstanding_backlogs', models.SmallIntegerField(blank=True, null=True)),
                ('backlogs_history', models.TextField(blank=True, null=True)),
                ('gap_in_education', models.BooleanField()),
                ('reason_for_gap_in_education', models.TextField(blank=True, null=True)),
                ('resume', models.FileField(upload_to='', verbose_name=recruitment.lib.file_path.resume_path)),
                ('technical_skills', models.TextField(verbose_name='Technical Skills')),
                ('achievements', models.TextField(blank=True, null=True, verbose_name='Awards/Recognitions received')),
                ('publications', models.TextField(blank=True, null=True, verbose_name='Papers published')),
                ('hackathons_participated', models.TextField(blank=True, null=True, verbose_name='Hackathons Participated')),
                ('extra_curricular_activities', models.TextField(blank=True, null=True, verbose_name='Extra Curricular Activities')),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recruitment.address')),
            ],
        ),
    ]
